# Чтение данных о каталогах

# Для получения информации о том какие директории и файлы находятся в текущем
# каталоге можно воспользоваться следующими вариантами кода.

import os
from pathlib import Path

# print(os.listdir())  # ['1.open.py', '10.path_creating.py', '11.listdir_iterdir.py', ...]

# p = Path(Path().cwd())
# for obj in p.iterdir():
#     print(obj)  # all files with '\n'


# Функция listdir возвращает список файлов и каталогов.
# Метод iterdir у экземпляра класса Path является генератором.
# В цикле он возвращает объекты из выбранной директории.


# ● Проверка на директорию, файл и ссылку

# Получив информацию о содержимом текущего каталога зачастую требуется уточнить что перед нами.
# В каталогах можно хранить другие каталоги и файлы. В файлах содержатся данные.
# А символьные ссылки указывают на каталоги и файлы из других мест.

# Рассмотрим варианты получения информации об объектах, полученных в примере кода выше.

"""
dir_list = os.listdir()  # список с директориями
for obj in dir_list:
    print(f'{os.path.isdir(obj)=}', end='\t')
    print(f'{os.path.isfile(obj)=}', end='\t')
    print(f'{os.path.islink(obj)=}', end='\t')
    print(f'{obj=}')

p = Path(Path().cwd())
for obj in p.iterdir():
    print(f'{obj.is_dir()=}', end='\t')
    print(f'{obj.is_file()=}', end='\t')
    print(f'{obj.is_symlink()=}', end='\t')
    print(f'{obj=}')
"""

# Обратите внимание, что при работе с модулем os мы получаем объекты str типа.
# Строки передаются в другие функции для получения результата.

# При работе с pathlib мы итерируемся по объектам Path.
# А если быть точным по экземплярам класса Path той операционной системы, в которой работает код.

# Методы проверки принадлежности являются частью экземпляра.

# ● Обход папок через os.walk()

# Функция os.walk рекурсивно обходит каталоги от переданного в качестве аргумента
# до самого нижнего уровня вложенности.

for dir_path, dir_name, file_name in os.walk(os.getcwd()):
    print(f'{dir_path=}\n{dir_name=}\n{file_name=}\n')

# Функция возвращает кортеж из трёх значений:
# ➢ dir_path — абсолютный путь до каталога
# ➢ dir_names — список с названиями всех каталогов, находящихся в dir_path
# ➢ dir_names — список с названиями всех файлов, находящихся в dir_path

# Вывод продолжается до тех пор, пока не будет возвращена информация обо всех директориях,
# т.е. каждая директория из dir_names передаётся в os.walk и оказывается в dir_path.
