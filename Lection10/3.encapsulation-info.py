# В классическом ООП выделяют следующие модификаторы доступа:

# ● public — публичный доступ,
# т.е. возможность обратиться к свойству или методу из любого другого класса и экземпляра

# ● protected — защищённый доступ,
# позволяющий обращаться к свойствам и методам из класса и из классов наследников.

# ● private — приватный доступ,
# т.е. отсутствие возможности обратиться к свойству или методы из другого класса или экземпляра.

# В Python по умолчанию все свойства и методы публичные.
# Однако существуют соглашения по стилю имён, которые делают атрибуты защищёнными/приватным.


# Инкапсуляция
# Символ подчёркивания определяет уровень инкапсуляции

# ● self._name   <- защищённый атрибут (свойство, поле)
# ● def _method(self):   <-  защищённый метод

# ● self.__name  <-  приватный атрибут (свойство, поле)
# ● def __method(self):  <-  приватный метод


# Доступ к приватным переменным

# Внутренний механизм Python модифицирует приватные имена.
# ● было
# class MyClass:
#  ...
#  self.__name

# ● стало
# z.MyClass()
# z._MyClass__name
