# –°–∏–º–≤–æ–ª @ —è–≤–ª—è–µ—Ç—Å—è –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—ã–º —Å–ø–æ—Å–æ–±–æ–º —Å–æ–∑–¥–∞—Ç—å –∑–∞–º—ã–∫–∞–Ω–∏–µ

# üî• –í–∞–∂–Ω–æ! –§—É–Ω–∫—Ü–∏—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ –∫–æ–¥–µ —Ä–∞–Ω—å—à–µ, —á–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞.
# –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –ø–æ–ª—É—á–∏–º –æ—à–∏–±–∫—É NameError.

"""
def main(func):
    def wrapper(*args, **kwargs):
        ...
        result = func(*args, **kwargs)
        ...
        return result

    return wrapper


@main
def my_func(data):
    ...
    return wrapper
"""

import time
from typing import Callable


def main(func: Callable):
    def wrapper(*args, **kwargs):
        print(f'–ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ {func.__name__} –≤ {time.time()}')
        result = func(*args, **kwargs)
        print(f'–†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏ {func.__name__}: {result}')
        print(f'–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ {func.__name__} –≤ {time.time()}')
        return result

    return wrapper


@main
def factorial(n: int) -> int:
    f = 1
    for i in range(2, n + 1):
        f *= i
    return f


# –î–æ–±–∞–≤–∏–ª–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä @main –∫ —Ñ—É–Ω–∫—Ü–∏–∏ factorial.
# –ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –≤ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–æ–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ—Ç–ø–∞–ª–∞.

print(f'{factorial(1000) = }')
