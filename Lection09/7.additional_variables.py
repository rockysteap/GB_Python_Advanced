# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–µ

# –ú—ã —É–∂–µ –∑–∞–º—ã–∫–∞–ª–∏ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –∏–º—ë–Ω.
# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –æ—Ç–∫—Ä—ã–≤–∞—é—Ç –±–æ–ª—å—à–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
# –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–≥–æ –∫—ç—à–∏—Ä—É—é—â–µ–≥–æ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞.


# üî• –í–∞–∂–Ω–æ!
# –ú—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –∏—Å–∫–ª—é—á–∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä **kwargs –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ wrapper, —Ç.–∫. —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å –∫–ª—é—á–µ–≤—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
# –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞ —Å–ª–æ–≤–∞—Ä—è _cache_dict –¥—Ä—É–≥–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è kwargs –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –æ—à–∏–±–∫–µ.
# –ö–ª—é—á–æ–º –º–æ–∂–µ—Ç –≤—ã—Å—Ç—É–ø–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ –æ–±—ä–µ–∫—Ç—ã.


from typing import Callable


def cache(func: Callable):
    _cache_dict = {}

    def wrapper(*args):
        if args not in _cache_dict:
            _cache_dict[args] = func(*args)
        return _cache_dict[args]

    return wrapper


@cache
def factorial(n: int) -> int:
    print(f'–í—ã—á–∏—Å–ª—è—é —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª –¥–ª—è —á–∏—Å–ª–∞ {n}')
    f = 1
    for i in range(2, n + 1):
        f *= i
    return f


print(f'{factorial(10) = }')
# –í—ã—á–∏—Å–ª—è—é —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª –¥–ª—è —á–∏—Å–ª–∞ 10
# factorial(10) = 3628800

print(f'{factorial(15) = }')
# –í—ã—á–∏—Å–ª—è—é —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª –¥–ª—è —á–∏—Å–ª–∞ 15
# factorial(15) = 1307674368000

print(f'{factorial(10) = }')
# factorial(10) = 3628800

print(f'{factorial(20) = }')
# –í—ã—á–∏—Å–ª—è—é —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª –¥–ª—è —á–∏—Å–ª–∞ 20
# factorial(20) = 2432902008176640000

print(f'{factorial(10) = }')
# factorial(10) = 3628800

print(f'{factorial(20) = }')
# factorial(20) = 2432902008176640000
